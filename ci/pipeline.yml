---
groups:
- name: commit
  jobs:
    - unit
    - build-binary
- name: acceptance
  jobs:
    - acceptance-tests
    - promote-to-uat
- name: release
  jobs:
    - manual-deploy-to-prod

resources:
- name: sample-spring-cloud-svc-repo
  type: git
  source:
    uri: git@github.com:pivotalservices/sample-spring-cloud-svc-ci.git
    branch: concourse
    private_key: {{git-private-key}}

- name: version
  type: semver
  source:
    bucket: sample-spring-cloud-svc-pipeline-artifacts
    key: current-version
    access_key_id: {{s3-access-key-id}}
    secret_access_key: {{s3-secret-access-key}}
    initial_version: 1.0.0

- name: sample-spring-cloud-svc-release
  type: s3
  source:
    bucket: sample-spring-cloud-svc-pipeline-artifacts
    regexp: sample-spring-cloud-svc-ci-(.*).jar
    access_key_id: {{s3-access-key-id}}
    secret_access_key: {{s3-secret-access-key}}

jobs:
- name: unit
  plan:
  - get: sample-spring-cloud-svc-repo
    trigger: true
  - task: unit
    config:
      image_resource:
        type: docker-image
        source:
          repository: java
      platform: linux
      inputs:
        - name: sample-spring-cloud-svc-repo
      run:
        path: /bin/bash
        args: ["-c", "sample-spring-cloud-svc-repo/ci/tasks/unit.sh"]

- name: build-binary
  serial: true
  plan:
  - get: sample-spring-cloud-svc-repo
    passed: [unit]
    trigger: true
  - get: version
    params: {bump: patch}
  - task: build-artifact
    config:
      image_resource:
        type: docker-image
        source:
          repository: java
      platform: linux
      inputs:
        - name: sample-spring-cloud-svc-repo
        - name: version
      outputs:
        - name: build
      run:
        path: /bin/bash
        args: ["-c", "sample-spring-cloud-svc-repo/ci/tasks/build-artifact.sh"]
  - put: sample-spring-cloud-svc-release
    params:
      file: build/sample-spring-cloud-svc-ci-*.jar
  - put: sample-spring-cloud-svc-repo
    params:
      repository: sample-spring-cloud-svc-repo
      tag: version/number
  - put: version
    params: {file: version/number}

- name: acceptance-tests
  plan:
  - aggregate:
    - get: sample-spring-cloud-svc-release
      passed: [build-binary]
      trigger: true
    - get: sample-spring-cloud-svc-repo
      passed: [build-binary]
      trigger: true
  - task: deploy-to-cats
    config:
      image_resource:
        type: docker-image
        source:
          repository: datianshi/cf-cli
      platform: linux
      inputs:
        - name: sample-spring-cloud-svc-repo
        - name: sample-spring-cloud-svc-release
      run:
        path: /bin/bash
        args: ["-c", "sample-spring-cloud-svc-repo/ci/tasks/cf-deployment.sh"]
      params:
        API_ENDPOINT: {{api-endpoint}}
        USERNAME: {{cf-username}}
        PASSWORD: {{cf-password}}
        ORG: {{cf-org}}
        SPACE: {{cf-space-test}}
        HOST: {{host-test}}
  - task: cats
    config:
      image_resource:
        type: docker-image
        source:
          repository: java
      platform: linux
      inputs:
        - name: sample-spring-cloud-svc-repo
      run:
        path: /bin/bash
        args: ["-c", "sample-spring-cloud-svc-repo/ci/tasks/cats.sh"]
      params:
        URL: {{test-url}}

- name: promote-to-uat
  plan:
  - aggregate:
    - get: sample-spring-cloud-svc-release
      passed: [acceptance-tests]
      trigger: true
    - get: sample-spring-cloud-svc-repo
      passed: [acceptance-tests]
      trigger: true
  - task: deploy-to-uat
    config:
      image_resource:
        type: docker-image
        source:
          repository: datianshi/cf-cli
      platform: linux
      inputs:
        - name: sample-spring-cloud-svc-repo
        - name: sample-spring-cloud-svc-release
      run:
        path: /bin/bash
        args: ["-c", "sample-spring-cloud-svc-repo/ci/tasks/cf-deployment.sh"]
      params:
        API_ENDPOINT: {{api-endpoint}}
        USERNAME: {{cf-username}}
        PASSWORD: {{cf-password}}
        ORG: {{cf-org}}
        SPACE: {{cf-space-uat}}
        HOST: {{host-uat}}

- name: manual-deploy-to-prod
  serial: true
  plan:
  - aggregate:
    - get: sample-spring-cloud-svc-release
      passed: [promote-to-uat]
    - get: sample-spring-cloud-svc-repo
      passed: [promote-to-uat]
  - task: deploy-to-prod
    config:
      image_resource:
        type: docker-image
        source:
          repository: datianshi/cf-cli
      platform: linux
      inputs:
        - name: sample-spring-cloud-svc-repo
        - name: sample-spring-cloud-svc-release
      run:
        path: /bin/bash
        args: ["-c", "sample-spring-cloud-svc-repo/ci/tasks/cf-deployment.sh"]
      params:
        API_ENDPOINT: {{api-endpoint}}
        USERNAME: {{cf-username}}
        PASSWORD: {{cf-password}}
        ORG: {{cf-org}}
        SPACE: {{cf-space-prod}}
        HOST: {{host-prod}}
