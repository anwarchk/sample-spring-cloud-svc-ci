# docker box definition
box: java

# defining the dev pipeline
dev:
  steps:
    - script:
      name: run gradle bootRun
      code: |
        ./gradlew bootRun

# Build definition
build:
  # The steps that will be executed on build
  steps:
    - script:
        name: show base information
        code: |
          ./gradlew -v
    - script:
        name: run gradle build
        code: |
          ./gradlew --full-stacktrace --project-cache-dir=$WERCKER_CACHE_DIR build
    - script:
        name: run gradle assemble
        code: |
          ./gradlew --full-stacktrace --project-cache-dir=$WERCKER_CACHE_DIR assemble

deploy:
  box: google/golang
  steps:
    - script:
        name: update and install wget
        code: |
          sudo apt-get update -y
          sudo apt-get install -y wget
    - xchapter7x/cf-push-zdd:
        num_instances: $CF_INSTANCES
        user_name: $CF_USER
        user_pass: $CF_PASS
        org: $CF_ORG
        space: $CF_SPACE
        api_url: $CF_APIURL
        app_name: $CF_APPNAME
        use_manifest: true
        manifest: $CF_MANIFEST_FILE_PATH

    - xchapter7x/flowy-release:
        action: "tag-only-release"
        tag_variable_name: "VERSION_TAG"
        active: $GITFLOW_ACTIVE
        git_name: $GITFLOW_NAME
        git_email: $GITFLOW_EMAIL

    - script:
        name: set release id variable and version.txt file
        code: |
          git fetch --tags
          export WERCKER_GITHUB_CREATE_RELEASE_ID=`git log -n1 --pretty=format:%d HEAD | sed s/\ //g | awk -F',' '{print $2}'`
          echo $WERCKER_GITHUB_CREATE_RELEASE_ID > version.txt

    - github-create-release:
        token: $GITHUB_TOKEN
        tag: $WERCKER_GITHUB_CREATE_RELEASE_ID
        # title: Admin Portal $WERCKER_GITHUB_CREATE_RELEASE_ID
        # draft: $RELEASE_DRAFT
    #
    # - github-upload-asset:
    #     token: $GITHUB_TOKEN
    #     file: adminportal.tgz
    #     release_id: $WERCKER_GITHUB_CREATE_RELEASE_ID
    #     content-type: application/x-gzip
