# docker box definition
box: java

# defining the dev pipeline
dev:
  steps:
    - script:
      name: run gradle bootRun
      code: |
        ./gradlew bootRun

# Build definition
build:
  # The steps that will be executed on build
  steps:
    - script:
        name: show base information
        code: |
          ./gradlew -v
    - script:
        name: run gradle build
        code: |
          ./gradlew --full-stacktrace --project-cache-dir=$WERCKER_CACHE_DIR build
    - script:
        name: run gradle assemble
        code: |
          ./gradlew --full-stacktrace --project-cache-dir=$WERCKER_CACHE_DIR assemble

deploy:
  box: google/golang
  steps:
    - script:
        name: update and install wget
        code: |
          sudo apt-get update -y
          sudo apt-get install -y wget

    - xchapter7x/cf-push-zdd:
        num_instances: $CF_INSTANCES
        user_name: $CF_USER
        user_pass: $CF_PASS
        org: $CF_ORG
        space: $CF_SPACE
        api_url: $CF_APIURL
        app_name: $CF_APPNAME
        use_manifest: true
        manifest: $CF_MANIFEST_FILE_PATH

    - s3sync:
        key_id: $AWS_ACCESS_KEY_ID
        key_secret: $AWS_SECRET_ACCESS_KEY
        bucket_url: $AWS_BUCKET_URL
        source_dir: build/

    - script:
        name: get version
        code: |
          export APP_VERSION=$(cat build/current-version)

    - github-create-release:
        token: $GITHUB_TOKEN
        tag: $APP_VERSION
        # title: Admin Portal $WERCKER_GITHUB_CREATE_RELEASE_ID
        # draft: $RELEASE_DRAFT
    #
    # - github-upload-asset:
    #     token: $GITHUB_TOKEN
    #     file: adminportal.tgz
    #     release_id: $WERCKER_GITHUB_CREATE_RELEASE_ID
    #     content-type: application/x-gzip
