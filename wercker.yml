box: java

dev:
  steps:
    - script:
      name: run gradle bootRun
      code: |
        ./gradlew bootRun

build:
  steps:
    - script:
        name: show base information
        code: |
          ./gradlew -v
    - script:
        name: run gradle build
        code: |
          ./gradlew --full-stacktrace --project-cache-dir=$WERCKER_CACHE_DIR build

set-version:
  box: google/golang
  steps:
    - script:
        name: create next version
        code: |
          go get github.com/xchapter7x/versioning
          export WERCKER_GITHUB_CREATE_RELEASE_ID=`versioning bump_patch`
          $(echo $WERCKER_GITHUB_CREATE_RELEASE_ID | cut -c2-6 > $WERCKER_OUTPUT_DIR/.release_tag)

    - koding/s3put@0.0.4:
        key-id:     $AWS_ACCESS_KEY_ID
        key-secret: $AWS_SECRET_ACCESS_KEY
        file:       $WERCKER_OUTPUT_DIR/.release_tag
        url:        s3://sample-spring-cloud-svc-pipeline-artifacts.s3.amazonaws.com/current-version

create-release:
  steps:
    - mannau/s3get@1.0.1:
        key-id: $AWS_ACCESS_KEY_ID
        key-secret: $AWS_SECRET_ACCESS_KEY
        bucket-url: s3://sample-spring-cloud-svc-pipeline-artifacts.s3.amazonaws.com
        source-dir: .

    - script:
        name: run gradle assemble
        code: |
          APP_VERSION=$(cat current-version)
          ./gradlew -Pversion=$APP_VERSION --full-stacktrace --project-cache-dir=$WERCKER_CACHE_DIR assemble
          export CF_PATH=build/libs/sample-spring-cloud-svc-$APP_VERSION.jar

    - github-upload-asset:
        token: $GITHUB_TOKEN
        file: $CF_PATH

deploy:
  box: google/golang
  steps:
    - script:
        name: update and install wget
        code: |
          sudo apt-get update -y

    - xchapter7x/cf-push-zdd:
        num_instances: $CF_INSTANCES
        user_name: $CF_USER
        user_pass: $CF_PASS
        org: $CF_ORG
        space: $CF_SPACE
        api_url: $CF_APIURL
        app_name: $CF_APPNAME
        use_manifest: true
        manifest: $CF_MANIFEST_FILE_PATH
        path: $CF_PATH
